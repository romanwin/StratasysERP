CREATE OR REPLACE VIEW PO_LINES_XML AS
SELECT
--------------------------------------------------------------------
--  name:            PO_LINES_XML
--  create by:       XXX
--  Revision:        1.0
--  creation date:   XX/XX/2009
--------------------------------------------------------------------
--  purpose :        REP001 - PO Document
--------------------------------------------------------------------
--  ver  date        name         desc
--  1.0  XX/XX/2009  XXX          initial build
--  1.1  21.05.13    Vitaly       cr763 -- uom_tl, item_description_jpn added
--  1.2  11.06.13    yuval tal    bugfix 821 add logic to linkage  add release num parameter
--------------------------------------------------------------------
nvl(pl.item_revision,(SELECT MAX(a.revision)
          FROM mtl_item_revisions a
         WHERE a.inventory_item_id = pl.item_id AND
               a.organization_id = fsp.inventory_organization_id AND
               a.effectivity_date <
               (SELECT nvl(MAX(nvl(poll.need_by_date, poll.promised_date)),
                           SYSDATE)
                  FROM po_line_locations_all poll
                 WHERE poll.po_line_id = pl.po_line_id)))  item_revision,
       pl.line_num,
       decode(nvl(msi.allow_item_desc_update_flag, 'Y'),
              'Y',
              pl.item_description,
              decode(pl.order_type_lookup_code,
                     'QUANTITY',
                     msi.description,
                     pl.item_description))      item_description,
       nvl(pl.attribute6,
           decode(nvl(msi.allow_item_desc_update_flag, 'Y'),
                  'Y',
                  pl.item_description,
                  decode(pl.order_type_lookup_code,
                         'QUANTITY',
                         xxinv_utils_pkg.get_item_desc_tl(
                                        pl.item_id,
                                        fsp.inventory_organization_id,
                                        fnd_global.org_id),  ----msi.description,
                         pl.item_description))) item_description_jpn,
       nvl(pl.cancel_flag, 'N') cancel_flag,
       to_char(pl.cancel_date, 'DD-MON-YYYY HH24:MI:SS') cancel_date,
       pl.cancel_reason,
       pl.vendor_product_num,
       pl.note_to_vendor,
       nvl(mum.unit_of_measure_tl, pl.unit_meas_lookup_code) unit_meas_lookup_code,
       xxpo_communication_report_pkg.get_uom_tl(pl.item_id,
                                                fsp.inventory_organization_id,
                                                nvl(mum.unit_of_measure_tl, pl.unit_meas_lookup_code))    uom_tl,
       pun.un_number,
       pun.description un_desc,
       phc.hazard_class,
       plt.order_type_lookup_code,
       decode(nvl(pl.contract_id, -1),
              -1,
              NULL,
              po_communication_pvt.getsegmentnum(pl.contract_id)) contract_num,
       decode(nvl(pl.from_header_id, -1),
              -1,
              NULL,
              po_communication_pvt.getsegmentnum(pl.from_header_id)) segment1,
       decode(nvl(pl.from_header_id, -1),
              -1,
              NULL,
              po_communication_pvt.getagreementflag()) global_agreement_flag,
       decode(nvl(pl.from_header_id, -1),
              -1,
              NULL,
              po_communication_pvt.getquotenumber()) quote_vendor_quote_number,
       decode(nvl(pl.from_line_id, -1),
              -1,
              NULL,
              po_communication_pvt.getagreementlinenumber(pl.from_line_id)) quotation_line,
       pl.attribute_category,
       substr(pl.attribute1, 1, instr(pl.attribute1, '|') - 1) attribute1,
       pl.attribute2,
       pl.attribute3,
       pl.attribute4,
       pl.attribute5,
       pl.attribute6,
       pl.attribute7,
       pl.attribute8,
       pl.attribute9,
       pl.attribute10,
       pl.attribute11,
       pl.attribute12,
       pl.attribute13,
       pl.attribute14,
       pl.attribute15,
       decode(pl.order_type_lookup_code,
              'AMOUNT',
              pl.unit_price,
              xxpo_communication_report_pkg.get_converted_amount(pl.unit_price,
                                                                 po_communication_pvt.getsegmentnum(pl.po_header_id),0)) unit_price,
       decode(pl.order_type_lookup_code,
              'AMOUNT',
              xxpo_communication_report_pkg.get_converted_amount(pl.quantity,
                                                                 po_communication_pvt.getsegmentnum(pl.po_header_id),0),
              pl.quantity) quantity,

       pl.quantity_committed,
       pl.po_header_id,
       pl.po_line_id,
       pl.item_id,
       pl.from_header_id,
       pl.from_line_id,
       pl.reference_num,
       to_char(pl.min_release_amount, pgt.format_mask) min_release_amount,
       pl.price_type_lookup_code,
       pl.closed_code,
       pl.price_break_lookup_code,
       pl.ussgl_transaction_code,
       pl.government_context,
       pl.request_id,
       pl.program_application_id,
       pl.program_id,
       to_char(pl.program_update_date, 'DD-MON-YYYY HH24:MI:SS') program_update_date,
       to_char(pl.closed_date, 'DD-MON-YYYY HH24:MI:SS') closed_date,
       pl.closed_reason,
       pl.closed_by,
       pl.transaction_reason_code,
       pl.org_id,
       pl.hazard_class_id,
       pl.min_order_quantity,
       pl.max_order_quantity,
       pl.qty_rcv_tolerance,
       pl.over_tolerance_error_flag,
       pl.market_price,
       pl.unordered_flag,
       pl.closed_flag,
       pl.user_hold_flag,
       pl.cancelled_by,
       pl.firm_status_lookup_code,
       to_char(pl.firm_date, 'DD-MON-YYYY HH24:MI:SS') firm_date,
       pl.taxable_flag,
       pl.type_1099,
       pl.capital_expense_flag,
       pl.negotiated_by_preparer_flag,
       pl.qc_grade,
       pl.base_uom,
       pl.base_qty,
       pl.secondary_uom,
       pl.secondary_qty,
       to_char(pl.last_update_date, 'DD-MON-YYYY HH24:MI:SS') last_update_date,
       pl.last_updated_by,
       pl.line_type_id,
       pl.last_update_login,
       to_char(pl.creation_date, 'DD-MON-YYYY HH24:MI:SS') creation_date,
       pl.created_by,
       pl.category_id,
        to_char( xxpo_communication_report_pkg.get_converted_amount(pl.committed_amount,po_communication_pvt.getsegmentnum(pl.po_header_id),0), pgt.format_mask) committed_amount, --  yuval : adj linkage 17.11.10
       pl.allow_price_override_flag,
       pl.not_to_exceed_price,
       pl.list_price_per_unit,
       pl.un_number_id,
       pl.global_attribute_category,
       pl.global_attribute1,
       pl.global_attribute2,
       pl.global_attribute3,
       pl.global_attribute4,
       pl.global_attribute5,
       pl.global_attribute6,
       pl.global_attribute7,
       pl.global_attribute8,
       pl.global_attribute9,
       pl.global_attribute10,
       pl.global_attribute11,
       pl.global_attribute12,
       pl.global_attribute13,
       pl.global_attribute14,
       pl.global_attribute15,
       pl.global_attribute16,
       pl.global_attribute17,
       pl.global_attribute18,
       pl.global_attribute19,
       pl.global_attribute20,
       pl.line_reference_num,
       pl.project_id,
       pl.task_id,
       to_char(pl.expiration_date, 'DD-MON-YYYY HH24:MI:SS') expiration_date,
       pl.tax_code_id,
       pl.oke_contract_header_id,
       pl.oke_contract_version_id,
       pl.tax_name,
       pl.secondary_unit_of_measure,
       pl.secondary_quantity,
       pl.preferred_grade,
       pl.auction_header_id,
       pl.auction_display_number,
       pl.auction_line_number,
       pl.bid_number,
       pl.bid_line_number,
       pl.retroactive_date,
       pl.supplier_ref_number,
       pl.contract_id,
       pl.job_id,
       pl.amount,
       to_char(pl.start_date, 'DD-MON-YYYY HH24:MI:SS') start_date,
       plt.order_type_lookup_code line_type,
       plt.purchase_basis,
       msi.concatenated_segments item_num,
       decode(nvl(pl.job_id, -1),
              -1,
              NULL,
              po_communication_pvt.getjob(pl.job_id)) job_name,
       pl.contractor_first_name,
       pl.contractor_last_name,
       /*       TO_CHAR(xxpo_communication_report_pkg.get_converted_amount(DECODE(PGT.PO_RELEASE_ID,
                                                                                NULL,
                                                                                PO_CORE_S.GET_TOTAL('L',
                                                                                                    PL.PO_LINE_ID),
                                                                                PO_CORE_S.GET_RELEASE_LINE_TOTAL(PL.PO_LINE_ID,
                                                                                                                 PGT.PO_RELEASE_ID)),
                                                                         PO_COMMUNICATION_PVT.GETSEGMENTNUM(PL.PO_HEADER_ID)),
                      PGT.FORMAT_MASK) LINE_AMOUNT,
       */
       xxpo_communication_report_pkg.get_converted_amount(decode(pgt.po_release_id,
                                                                 NULL,
                                                                 xxpo_communication_report_pkg.get_total('L',
                                                                                                         pl.po_line_id),
                                                                 po_core_s.get_release_line_total(pl.po_line_id,
                                                                                                  pgt.po_release_id)),
                                                          po_communication_pvt.getsegmentnum(pl.po_header_id),decode (pgt.po_release_id,null,0,xxpo_communication_report_pkg.get_release_num(pgt.po_release_id))) line_amount,
       decode(pl.cancel_flag,
              'Y',
              to_char(po_communication_pvt.getcanceledamount(pl.po_line_id,
                                                             NULL,
                                                             pl.po_header_id),
                      pgt.format_mask),
              NULL) canceled_amount,
       decode(pl.cancel_flag,
              'Y',
              to_char(po_communication_pvt.getlineoriginalamount(),
                      pgt.format_mask),
              NULL) total_line_amount,
       pl.base_unit_price,
       pl.manual_price_change_flag,
       pl.matching_basis,
       pl.svc_amount_notif_sent,
       pl.svc_completion_notif_sent,
       pl.from_line_location_id,
       pl.retainage_rate,
       to_char(pl.max_retainage_amount, pgt.format_mask) max_retainage_amount,
       pl.progress_payment_rate,
       pl.recoupment_rate,
       xxpo_communication_report_pkg.get_rate_cur_for_xml(po_communication_pvt.getsegmentnum(pl.po_header_id),0) line_rate_currency,
       xxpo_communication_report_pkg.get_rate_baserate_for_xml(po_communication_pvt.getsegmentnum(pl.po_header_id),0) line_base_rate,
       round(decode(pl.order_type_lookup_code,
                    'AMOUNT',
                    pl.quantity,
                    pl.unit_price) /
             xxpo_communication_report_pkg.get_rate_baserate_for_xml(po_communication_pvt.getsegmentnum(pl.po_header_id),0),
             2) line_base_rate_calc,
       xxpo_communication_report_pkg.get_rate_basedate_for_xml(po_communication_pvt.getsegmentnum(pl.po_header_id),0) line_base_date,
       decode(pl.order_type_lookup_code,
              'AMOUNT',
              1,
              xxpo_communication_report_pkg.get_balance_quantity(pl.po_line_id)) balance_quantity,
              xxpo_communication_report_pkg.get_release_remain_quantity(pl.po_line_id)  QUANTITY_REL_REMAIN,
              xxpo_communication_report_pkg.is_multi_ship_to_ORG(pl.po_header_id) IS_MULTI_SHIP_TO_ORG
  FROM po_line_types_b              plt,
       po_lines_all                 pl,
       po_un_numbers_tl             pun,
       po_hazard_classes_tl         phc,
       mtl_units_of_measure_tl      mum,
       mtl_system_items_kfv         msi,
       financials_system_params_all fsp,
       po_communication_gt          pgt
 WHERE pl.line_type_id = plt.line_type_id AND
       pl.hazard_class_id = phc.hazard_class_id(+) AND
       pl.un_number_id = pun.un_number_id(+) AND
       pl.unit_meas_lookup_code = mum.unit_of_measure(+) AND
       nvl(pl.cancel_flag, 'N') = 'N' AND
       pl.item_id = msi.inventory_item_id(+) AND
       nvl(msi.organization_id, fsp.inventory_organization_id) =
       fsp.inventory_organization_id AND
       phc.LANGUAGE(+) = userenv('LANG') AND
       pun.LANGUAGE(+) = userenv('LANG') AND
       mum.LANGUAGE(+) = userenv('LANG') AND
       pl.org_id = fsp.org_id;
